@import '../mixins';

.main {
    height: calc(100dvh - 1rem);
}

.appContainer {
    .grid(@columns: 1fr 2fr minmax(0px, 1fr), @rows: minmax(@canvas-min, 1fr));
    grid-template-areas: "settingsStatus canvas .";
    max-height: 100%;

    @media @media-width-full {
        .grid(@columns: minmax(@settings-width-min, 1fr) minmax(@canvas-min, 2fr), @rows: minmax(@canvas-min, 1fr));
        grid-template-areas: "settingsStatus canvas";
    }

    @media @media-width-small {
        .grid(@columns: auto, @rows: minmax(@canvas-min, 1fr) auto);
        grid-template-areas: "canvas" "settingsStatus";
    }
}

.settingsStatusContainer {
    .grid();
    grid-area: settingsStatus;
    grid-template-areas: "status" "settings";
    align-self: flex-start;

    @media @media-width-small {
        justify-self: center;
    }
}

.settingsContainer {
    grid-area: settings;
}

.status {
    grid-area: status;
}

.canvasContainer {
    grid-area: canvas;
}

///////////////////////////////////////////////////////////////////
// The fractal display canvas

.canvasContainer {
    display: grid;
}

.fractalCanvas {
    border: 3px solid black;
    border-style: inset;
    max-width: 100%;
    max-height: 100%;
    aspect-ratio: 1 / 1;
    object-fit: contain;

    @media @media-width-small {
        justify-self: center;
    }
}

///////////////////////////////////////////////////////////////////
// The status text & render dot

.status {
    .flex(row, @align: center, @gap: 0.5rem);
    justify-items: flex-end;
    max-width: @settings-width-max;

    >* {
        flex: 1;
    }

    >label {
        text-wrap: nowrap;
    }

    >label:first-child {
        text-align: left;
    }
}

.frameRate {
    .flex(row, @gap: 0.5rem, @align: center);
    justify-content: flex-end;
}

.renderDisplay() {
    border-radius: 50%;
    border: 2px outset black;
    width: 0.6rem;
    height: 0.6rem;
}

.isRendering {
    background-color: lightgreen;
    .renderDisplay();
}

.notRendering {
    background-color: darkred;
    .renderDisplay();
}

///////////////////////////////////////////////////////////////////
// Settings dialog

.settingsContainer {
    min-width: @settings-width-min;
    max-width: @settings-width-max;
}

.settingsHeaderContainer {
    .flex(row);
}

.settingsHeader {
    border: 3px inset black;
    border-bottom-color: grey;
    border-bottom-style: ridge;
    border-top-left-radius: 0.5rem;
    border-top-right-radius: 0.5rem;

    padding-inline: 0.5rem;
    background-color: @color-bg-settings-unselected;
    color: black;

    cursor: pointer;
}

.settingsHeader.selectedPanel {
    background-color: @color-bg-settings;
    border-bottom: none;
    color: black;
    font-weight: bold;
}

.settings {
    background-color: @color-bg-settings;
    padding: 0.5rem;
    border: 3px inset black;
    border-top: none;
    min-height: 3rem;

    label {
        color: black;
    }
}

///////////////////////////////////////////////////////////////////
// Settings dialog, Formula section

.formulaSettings {
    .grid(@columns: auto minmax(4rem, auto));
}

.formulaDropdown.isCustomFormula,
.customFormula:not(.isCustomFormula, :focus) {
    background-color: @color-bg-input-unselected;
}

.customFormula.badFormula {
    &:focus {
        box-shadow: none;
        outline: none;
    }

    border-color: red;
}

///////////////////////////////////////////////////////////////////

.renderingSettings {
    .grid(@columns: auto auto);

    >input {
        justify-self: flex-start;
    }
}

///////////////////////////////////////////////////////////////////

.debugSettings {
    // .grid(@columns: auto auto);
    width: auto;
}